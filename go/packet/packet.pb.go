// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packet.proto

package packet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Packet struct {
	// Types that are valid to be assigned to Contents:
	//	*Packet_Sample
	//	*Packet_Event
	Contents             isPacket_Contents `protobuf_oneof:"contents"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

type isPacket_Contents interface {
	isPacket_Contents()
}

type Packet_Sample struct {
	Sample *Sample `protobuf:"bytes,1,opt,name=sample,proto3,oneof"`
}

type Packet_Event struct {
	Event *Event `protobuf:"bytes,2,opt,name=event,proto3,oneof"`
}

func (*Packet_Sample) isPacket_Contents() {}

func (*Packet_Event) isPacket_Contents() {}

func (m *Packet) GetContents() isPacket_Contents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Packet) GetSample() *Sample {
	if x, ok := m.GetContents().(*Packet_Sample); ok {
		return x.Sample
	}
	return nil
}

func (m *Packet) GetEvent() *Event {
	if x, ok := m.GetContents().(*Packet_Event); ok {
		return x.Event
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Packet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Packet_OneofMarshaler, _Packet_OneofUnmarshaler, _Packet_OneofSizer, []interface{}{
		(*Packet_Sample)(nil),
		(*Packet_Event)(nil),
	}
}

func _Packet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Packet)
	// contents
	switch x := m.Contents.(type) {
	case *Packet_Sample:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sample); err != nil {
			return err
		}
	case *Packet_Event:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Event); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Packet.Contents has unexpected type %T", x)
	}
	return nil
}

func _Packet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Packet)
	switch tag {
	case 1: // contents.sample
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sample)
		err := b.DecodeMessage(msg)
		m.Contents = &Packet_Sample{msg}
		return true, err
	case 2: // contents.event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event)
		err := b.DecodeMessage(msg)
		m.Contents = &Packet_Event{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Packet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Packet)
	// contents
	switch x := m.Contents.(type) {
	case *Packet_Sample:
		s := proto.Size(x.Sample)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_Event:
		s := proto.Size(x.Event)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Packets struct {
	Packets              []*Packet `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Packets) Reset()         { *m = Packets{} }
func (m *Packets) String() string { return proto.CompactTextString(m) }
func (*Packets) ProtoMessage()    {}
func (*Packets) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{1}
}

func (m *Packets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packets.Unmarshal(m, b)
}
func (m *Packets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packets.Marshal(b, m, deterministic)
}
func (m *Packets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packets.Merge(m, src)
}
func (m *Packets) XXX_Size() int {
	return xxx_messageInfo_Packets.Size(m)
}
func (m *Packets) XXX_DiscardUnknown() {
	xxx_messageInfo_Packets.DiscardUnknown(m)
}

var xxx_messageInfo_Packets proto.InternalMessageInfo

func (m *Packets) GetPackets() []*Packet {
	if m != nil {
		return m.Packets
	}
	return nil
}

func init() {
	proto.RegisterType((*Packet)(nil), "packet.Packet")
	proto.RegisterType((*Packets)(nil), "packet.Packets")
}

func init() { proto.RegisterFile("packet.proto", fileDescriptor_e9ef1a6541f9f9e7) }

var fileDescriptor_e9ef1a6541f9f9e7 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0x4c, 0xce,
	0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0x78, 0x8a, 0x13,
	0x73, 0x0b, 0x72, 0x52, 0x21, 0xa2, 0x52, 0xdc, 0xa9, 0x65, 0xa9, 0x79, 0x50, 0x25, 0x4a, 0xa9,
	0x5c, 0x6c, 0x01, 0x60, 0x45, 0x42, 0x1a, 0x5c, 0x6c, 0x10, 0x65, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0xdc, 0x46, 0x7c, 0x7a, 0x50, 0xb3, 0x82, 0xc1, 0xa2, 0x1e, 0x0c, 0x41, 0x50, 0x79, 0x21, 0x55,
	0x2e, 0x56, 0xb0, 0x11, 0x12, 0x4c, 0x60, 0x85, 0xbc, 0x30, 0x85, 0xae, 0x20, 0x41, 0x0f, 0x86,
	0x20, 0x88, 0xac, 0x13, 0x17, 0x17, 0x47, 0x72, 0x7e, 0x5e, 0x49, 0x6a, 0x5e, 0x49, 0xb1, 0x92,
	0x31, 0x17, 0x3b, 0xc4, 0x9a, 0x62, 0x21, 0x0d, 0x2e, 0x76, 0x88, 0xfa, 0x62, 0x09, 0x46, 0x05,
	0x66, 0x64, 0x8b, 0x20, 0x2a, 0x82, 0x60, 0xd2, 0x49, 0x6c, 0x60, 0x27, 0x1a, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xe3, 0xe3, 0x5c, 0xda, 0xd5, 0x00, 0x00, 0x00,
}
