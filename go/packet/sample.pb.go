// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

package packet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Sample_Type int32

const (
	Sample_ANALOG Sample_Type = 0
	Sample_DIGIO  Sample_Type = 1
)

var Sample_Type_name = map[int32]string{
	0: "ANALOG",
	1: "DIGIO",
}

var Sample_Type_value = map[string]int32{
	"ANALOG": 0,
	"DIGIO":  1,
}

func (x Sample_Type) String() string {
	return proto.EnumName(Sample_Type_name, int32(x))
}

func (Sample_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{0, 0}
}

type SampleDuration_Type int32

const (
	SampleDuration_ANALOG SampleDuration_Type = 0
	SampleDuration_DIGIO  SampleDuration_Type = 1
)

var SampleDuration_Type_name = map[int32]string{
	0: "ANALOG",
	1: "DIGIO",
}

var SampleDuration_Type_value = map[string]int32{
	"ANALOG": 0,
	"DIGIO":  1,
}

func (x SampleDuration_Type) String() string {
	return proto.EnumName(SampleDuration_Type_name, int32(x))
}

func (SampleDuration_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{1, 0}
}

type Sample struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 Sample_Type          `protobuf:"varint,2,opt,name=type,proto3,enum=packet.Sample_Type" json:"type,omitempty"`
	Index                int32                `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Value                float32              `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{0}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sample) GetType() Sample_Type {
	if m != nil {
		return m.Type
	}
	return Sample_ANALOG
}

func (m *Sample) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Sample) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sample) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type SampleDuration struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 SampleDuration_Type  `protobuf:"varint,2,opt,name=type,proto3,enum=packet.SampleDuration_Type" json:"type,omitempty"`
	Index                int32                `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Value                float32              `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Duration             float32              `protobuf:"fixed32,6,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SampleDuration) Reset()         { *m = SampleDuration{} }
func (m *SampleDuration) String() string { return proto.CompactTextString(m) }
func (*SampleDuration) ProtoMessage()    {}
func (*SampleDuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{1}
}

func (m *SampleDuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleDuration.Unmarshal(m, b)
}
func (m *SampleDuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleDuration.Marshal(b, m, deterministic)
}
func (m *SampleDuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleDuration.Merge(m, src)
}
func (m *SampleDuration) XXX_Size() int {
	return xxx_messageInfo_SampleDuration.Size(m)
}
func (m *SampleDuration) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleDuration.DiscardUnknown(m)
}

var xxx_messageInfo_SampleDuration proto.InternalMessageInfo

func (m *SampleDuration) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SampleDuration) GetType() SampleDuration_Type {
	if m != nil {
		return m.Type
	}
	return SampleDuration_ANALOG
}

func (m *SampleDuration) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SampleDuration) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *SampleDuration) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *SampleDuration) GetDuration() float32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type Samples struct {
	Samples              []*Sample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Samples) Reset()         { *m = Samples{} }
func (m *Samples) String() string { return proto.CompactTextString(m) }
func (*Samples) ProtoMessage()    {}
func (*Samples) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{2}
}

func (m *Samples) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Samples.Unmarshal(m, b)
}
func (m *Samples) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Samples.Marshal(b, m, deterministic)
}
func (m *Samples) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Samples.Merge(m, src)
}
func (m *Samples) XXX_Size() int {
	return xxx_messageInfo_Samples.Size(m)
}
func (m *Samples) XXX_DiscardUnknown() {
	xxx_messageInfo_Samples.DiscardUnknown(m)
}

var xxx_messageInfo_Samples proto.InternalMessageInfo

func (m *Samples) GetSamples() []*Sample {
	if m != nil {
		return m.Samples
	}
	return nil
}

func init() {
	proto.RegisterEnum("packet.Sample_Type", Sample_Type_name, Sample_Type_value)
	proto.RegisterEnum("packet.SampleDuration_Type", SampleDuration_Type_name, SampleDuration_Type_value)
	proto.RegisterType((*Sample)(nil), "packet.Sample")
	proto.RegisterType((*SampleDuration)(nil), "packet.SampleDuration")
	proto.RegisterType((*Samples)(nil), "packet.Samples")
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor_2141552de9bf11d0) }

var fileDescriptor_2141552de9bf11d0 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x4d, 0xd7, 0x76, 0xee, 0x4c, 0xca, 0x88, 0x5e, 0x84, 0x8a, 0x18, 0x7a, 0x63, 0xae,
	0x52, 0xe8, 0x9e, 0x60, 0x30, 0x18, 0x03, 0x71, 0x10, 0xf7, 0x02, 0x9d, 0x8d, 0xa3, 0xd8, 0x2e,
	0x61, 0x4d, 0xc5, 0xbd, 0x9b, 0x0f, 0xe4, 0x63, 0x48, 0x13, 0x2b, 0x14, 0x2f, 0xbc, 0xdb, 0xe5,
	0x39, 0xf9, 0xcf, 0x39, 0xdf, 0x47, 0xe0, 0xaa, 0xc9, 0x6b, 0x5d, 0x49, 0xae, 0x8f, 0xca, 0x28,
	0x1c, 0xea, 0xfc, 0xe5, 0x4d, 0x9a, 0xf8, 0x7e, 0xaf, 0xd4, 0xbe, 0x92, 0xa9, 0xed, 0xee, 0xda,
	0xd7, 0xd4, 0x94, 0xb5, 0x6c, 0x4c, 0x5e, 0x6b, 0x17, 0x4c, 0x3e, 0x11, 0x84, 0xcf, 0x76, 0x12,
	0x47, 0xe0, 0x95, 0x05, 0x41, 0x14, 0xb1, 0x89, 0xf0, 0xca, 0x02, 0x3f, 0x80, 0x6f, 0x4e, 0x5a,
	0x12, 0x8f, 0x22, 0x16, 0x65, 0xd7, 0xdc, 0xad, 0xe4, 0x2e, 0xcd, 0xb7, 0x27, 0x2d, 0x85, 0x0d,
	0xe0, 0x1b, 0x08, 0xca, 0x43, 0x21, 0x3f, 0xc8, 0x88, 0x22, 0x16, 0x08, 0x57, 0x74, 0xdd, 0xf7,
	0xbc, 0x6a, 0x25, 0xf1, 0x29, 0x62, 0x9e, 0x70, 0x05, 0xe6, 0xe0, 0x77, 0x08, 0x24, 0xa0, 0x88,
	0x4d, 0xb3, 0x98, 0x3b, 0x3e, 0xde, 0xf3, 0xf1, 0x6d, 0xcf, 0x27, 0x6c, 0x2e, 0xb9, 0x03, 0xbf,
	0xbb, 0x84, 0x01, 0xc2, 0xc5, 0xd3, 0xe2, 0x71, 0xb3, 0x9a, 0x5d, 0xe0, 0x09, 0x04, 0xcb, 0xf5,
	0x6a, 0xbd, 0x99, 0xa1, 0xe4, 0x0b, 0x41, 0xe4, 0x80, 0x96, 0xed, 0x31, 0x37, 0xa5, 0x3a, 0xfc,
	0xd1, 0x48, 0x07, 0x1a, 0xb7, 0x43, 0x8d, 0x7e, 0xea, 0x4c, 0x3a, 0x38, 0x86, 0xcb, 0xe2, 0xe7,
	0x24, 0x09, 0xed, 0xa2, 0xdf, 0xfa, 0x3f, 0xd5, 0x39, 0x8c, 0x1d, 0x73, 0x83, 0x19, 0x8c, 0xdd,
	0x6f, 0x37, 0x04, 0xd1, 0x11, 0x9b, 0x66, 0xd1, 0xd0, 0x4a, 0xf4, 0xcf, 0xbb, 0xd0, 0x92, 0xcc,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x82, 0x07, 0x68, 0x1e, 0x02, 0x00, 0x00,
}
